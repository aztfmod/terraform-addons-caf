name: ci_jenkins

on:
  pull_request:
    paths:
      - .github/workflows/ci_jenkins.yml
      - 'modules/jenkins/module/**'
      - 'modules/jenkins/example/**'
  push:
    branches: main
    paths:
    - 'modules/jenkins/module/**'
    - 'modules/jenkins/example/**'
  workflow_dispatch:

env:
  TF_CLI_ARGS: '-no-color'
  TF_CLI_ARGS_destroy: '-auto-approve -refresh=false'
  ROVER_RUNNER: true

jobs:
  ci:
    runs-on: [ubuntu-latest]

    container:
      image: aztfmod/rover:0.13.6-2104.0803
      options: --user 0

    steps:
      - name: Repo Checkout - self
        uses: actions/checkout@v2

      - name: Repo Checkout - caf-terraform-landingzones
        uses: actions/checkout@v2
        with:
          repository: azure/caf-terraform-landingzones
          path: public

      - name: Login Azure
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
          CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
          SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
          TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

          az login --service-principal -u "${CLIENT_ID}" -p "${CLIENT_SECRET}" --tenant "${TENANT_ID}"

          az account set -s "${SUBSCRIPTION_ID}"

          echo "local user: $(whoami)"

      - name: Provision launchpad
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
          export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
          export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
          export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

          ENVIRONMENT_SUFFIX=${{ github.run_id }}

          export environment="ci_${ENVIRONMENT_SUFFIX}"

          echo "Environment name is 'ci_${ENVIRONMENT_SUFFIX}'"

          # deploy launchpad
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/caf_launchpad -launchpad -var-folder ${GITHUB_WORKSPACE}/public/caf_launchpad/scenario/100 -parallelism 30 -level level0 -env ${environment} -a apply

      - name: Deploying Jenkins module
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME:  ${{ secrets.JENKINS_USERNAME }}
          JENKINS_PASSWORD:  ${{ secrets.JENKINS_PASSWORD }}          
        run: |
          export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
          export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
          export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
          export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

          ENVIRONMENT_SUFFIX=${{ github.run_id }}

          export environment="ci_${ENVIRONMENT_SUFFIX}"

          echo "Environment name is 'ci_${ENVIRONMENT_SUFFIX}'"

          # deploy jenkins
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/modules/jenkins/example/ -var-folder ${GITHUB_WORKSPACE}/modules/jenkins/example/configuration/new_project -level level1 -env ${environment} -a apply

      - name: Destroy Jenkins module
        if: always()
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_USERNAME:  ${{ secrets.JENKINS_USERNAME }}
          JENKINS_PASSWORD:  ${{ secrets.JENKINS_PASSWORD }}
        run: |
          export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
          export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
          export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
          export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

          ENVIRONMENT_SUFFIX=${{ github.run_id }}

          export environment="ci_${ENVIRONMENT_SUFFIX}"

          echo "Environment name is 'ci_${ENVIRONMENT_SUFFIX}'"

          # destroy jenkins
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/modules/jenkins/example/ -var-folder ${GITHUB_WORKSPACE}/modules/jenkins/example/configuration/new_project -level level1 -env ${environment} -a destroy -auto-approve


      - name: Destroy launchpad
        if: always()
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          export ARM_CLIENT_SECRET=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientSecret")
          export ARM_CLIENT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".clientId")
          export ARM_SUBSCRIPTION_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".subscriptionId")
          export ARM_TENANT_ID=$(echo "${AZURE_CREDENTIALS}" | jq -r ".tenantId")

          ENVIRONMENT_SUFFIX=${{ github.run_id }}

          export environment="ci_${ENVIRONMENT_SUFFIX}"

          echo "Environment name is 'ci_${ENVIRONMENT_SUFFIX}'"

          # destroy launchpad
          /tf/rover/rover.sh -lz ${GITHUB_WORKSPACE}/public/caf_launchpad -launchpad -var-folder ${GITHUB_WORKSPACE}/public/caf_launchpad/scenario/100 -parallelism 30 -level level0 -env ${environment} -a destroy -auto-approve
